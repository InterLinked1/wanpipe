--- sdladrv.c	2005-10-17 18:21:26.000000000 -0400
+++ /root/2.3.3/wanpipe/patches/kdrivers/src/net/sdladrv.c	2005-10-25 17:31:43.387099936 -0400
@@ -4455,6 +4455,7 @@
 
 }
 
+
 /*============================================================================
  * Map memory for AFT HDLC PCI adapter in the PCI bus.
  */
@@ -4467,25 +4468,34 @@
 	WAN_ASSERT(hw == NULL);
 	WAN_ASSERT(hw->hwcard == NULL);
 	hwcard = hw->hwcard;
+
 	switch (hwcard->type){ 
+
 	case SDLA_S508:
 		break;
 
 	case SDLA_ADSL:
-		sdla_pci_read_config_dword(hw, PCI_IO_BASE_DWORD, (u32*)&hw->mem_base_addr);
-		if(!hw->mem_base_addr) {
-			DEBUG_EVENT( "%s: No PCI memory allocated to card!\n",
-						hw->devname);
-			return -EINVAL;
-		}
-	
+
 		if (sdla_pci_enable_device(hw)){
-			DEBUG_EVENT( "%s: Error: S518 ADSL PCI enable failed\n",
+			DEBUG_EVENT( "%s: Error: AFT PCI enable failed\n",
 				hw->devname);
 			return -EINVAL;
-	    	}
+		}
 		hw->status |= SDLA_PCI_ENABLE;
 
+
+		sdla_get_pci_base_resource_addr(hw,
+						PCI_IO_BASE_DWORD,  
+						&hw->mem_base_addr);
+
+
+		if(!hw->mem_base_addr) {
+			DEBUG_EVENT( "%s: No PCI memory allocated to card!\n",
+						hw->devname);
+			err = -EINVAL;
+			goto aft_pci_error;
+		}
+	
 		sdla_pci_set_master(hw);
 
 		hw->memory=GSI_PCI_MEMORY_SIZE;
@@ -4499,7 +4509,8 @@
 			if (err){
 				DEBUG_EVENT("%s: Error: Unable to reserve S518 ADSL pci bar0 memory\n",
 					hw->devname);
-				return -EINVAL;
+				err = -EINVAL;
+				goto aft_pci_error;
     			}
 			hw->status |= SDLA_MEM_RESERVED;
 		}
@@ -4510,7 +4521,8 @@
 		        if(!hw->dpmbase) {
 				DEBUG_EVENT( "%s: Error: S518 ADSL PCI virtual memory ioremap failed\n",
 					hw->devname);
-	                	return -EINVAL;
+				err = -EINVAL;
+				goto aft_pci_error;
 			}
 			hw->status |= SDLA_MEM_MAPPED;
 		}
@@ -4526,9 +4538,10 @@
 		hw->status |= SDLA_PCI_ENABLE;
 		
 
-	/*	sdla_pci_read_config_dword(  */
 		sdla_get_pci_base_resource_addr(hw,
-				 		PCI_IO_BASE_DWORD,
+						(cpu_no == SDLA_CPU_A) ? 
+							PCI_IO_BASE_DWORD : 
+							PCI_MEM_BASE0_DWORD,
 						&hw->mem_base_addr);
 
 		if (!hw->mem_base_addr){
@@ -4540,16 +4553,21 @@
 					hw->devname);
 			}
 			err = -EINVAL;
-			goto aft_pci_disable;
+			goto aft_pci_error;
 		}
 		
 		/* Enable master operation on PCI and enable
 		 * bar0 memory */
 		sdla_pci_set_master(hw);
 	
-
-		hw->memory = (hw->hwcard->adptr_type == A104_ADPTR_4TE1)?
-					AFT4_PCI_MEM_SIZE : AFT_PCI_MEM_SIZE; 
+		switch(hw->hwcard->adptr_type){
+		case A104_ADPTR_4TE1:
+			hw->memory = AFT4_PCI_MEM_SIZE; 
+			break;
+		default:
+			hw->memory = AFT_PCI_MEM_SIZE; 
+			break;
+		}
 
 		if (!(hw->status & SDLA_MEM_RESERVED)){
 			err = sdla_request_mem_region(
@@ -4564,7 +4582,7 @@
 					hw->devname);
 
 				err = -EINVAL;
-				goto aft_pci_disable;
+				goto aft_pci_error;
 			}
 			hw->status |= SDLA_MEM_RESERVED;
 	    	}
@@ -4579,22 +4597,19 @@
 				DEBUG_EVENT( "%s: Error: AFT PCI virtual memory ioremap failed\n",
 					hw->devname);
 				err = -EINVAL;
-				goto aft_pci_unmap;
+				goto aft_pci_error;
 			}	
 			hw->status |= SDLA_MEM_MAPPED;
 		}
 		break;
-aft_pci_unmap:
-		sdla_memory_unmap(hw);
-aft_pci_disable:
-		sdla_pci_disable_device(hw);
-		hw->status &= ~SDLA_PCI_ENABLE;		
-		hw->status &= ~SDLA_MEM_RESERVED;
-		hw->status &= ~SDLA_MEM_MAPPED;
-		break;
 	}
 
 	return err;
+
+
+aft_pci_error:
+	sdla_memory_unmap(hw);
+	return err;
 }
 
 /*============================================================================
@@ -4610,20 +4625,13 @@
 	switch (hwcard->type){ 
 	case SDLA_S508:
 		break;
+
 	case SDLA_ADSL:
-		if (hw->status & SDLA_MEM_RESERVED){
-			sdla_release_mem_region(hw, hw->mem_base_addr, hw->memory);
-			hw->status &= ~SDLA_MEM_RESERVED;
-		}
+	case SDLA_AFT:
 
-		/* free up the allocated virtual memory */
-		if (hw->status & SDLA_MEM_MAPPED){
-			sdla_bus_space_unmap(hw, hw->dpmbase, hw->memory);
-			hw->status &= ~SDLA_MEM_MAPPED;
+		if (hw->status & SDLA_PCI_ENABLE){
+			sdla_pci_disable_device(hw);
 		}
-		break;
-	case SDLA_AFT:
-		DEBUG_TEST("AFT RELEASE MEMORY Cnt=%d!\n",hw->used);
 
 		if (hw->status & SDLA_MEM_RESERVED){
 			sdla_release_mem_region(
@@ -4645,6 +4653,8 @@
 	}
 	return 0;
 }
+
+
 /*============================================================================
  * Find the AFT HDLC PCI adapter in the PCI bus.
  * Return the number of AFT adapters found (0 if no adapter found).
